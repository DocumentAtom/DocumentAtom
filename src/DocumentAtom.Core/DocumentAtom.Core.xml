<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocumentAtom.Core</name>
    </assembly>
    <members>
        <member name="T:DocumentAtom.Core.Atoms.Atom">
            <summary>
            An atom is a small, self-contained unit of content from a document.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.GUID">
            <summary>
            GUID.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Type">
            <summary>
            The type of the content for this atom.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.SheetName">
            <summary>
            Sheet name.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.CellIdentifier">
            <summary>
            Cell identifier.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.PageNumber">
            <summary>
            Page number.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Position">
            <summary>
            The ordinal position of the atom.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Length">
            <summary>
            The length of the atom content.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Rows">
            <summary>
            The number of rows.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Columns">
            <summary>
            The number of columns.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Subtitle">
            <summary>
            Subtitle.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.MD5Hash">
            <summary>
            MD5 hash of the content.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.SHA1Hash">
            <summary>
            SHA1 hash of the content.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.SHA256Hash">
            <summary>
            SHA256 hash of the content.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.HeaderLevel">
            <summary>
            Header level, that is, the number of hash marks found at the beginning of the text.
            Minimum value is 1.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Formatting">
            <summary>
            Markdown formatting type for this atom.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.BoundingBox">
            <summary>
            Bounding box.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Text">
            <summary>
            Text content.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.UnorderedList">
            <summary>
            Unordered list elements.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.OrderedList">
            <summary>
            Ordered list elements.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Table">
            <summary>
            Data table.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Binary">
            <summary>
            Binary data.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.Atom.Quarks">
            <summary>
            A quark is a subset of the content from an atom, used when intentionally breaking content into smaller chunks.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.#ctor">
            <summary>
            An atom is a small, self-contained unit of content from a document.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.ToString">
            <summary>
            Produce a human-readable string of this object.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.FromTableStructure(DocumentAtom.Core.Image.TableStructure)">
            <summary>
            Create a table atom from a table structure.
            </summary>
            <param name="table">Table structure.</param>
            <returns>Table atom.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.FromTextContent(System.String,System.Int32,DocumentAtom.Core.ChunkingSettings)">
            <summary>
            Create an atom from text content.
            </summary>
            <param name="text">Text.</param>
            <param name="position">Position.</param>
            <param name="settings">Settings.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.FromMarkdownContent(System.String,System.Int32,DocumentAtom.Core.ChunkingSettings)">
            <summary>
            Produce an atom with quarks, if chunking is enabled.
            </summary>
            <param name="text">Text content.</param>
            <param name="position">Atom position.</param>
            <param name="settings">Chunking settings.</param>
            <returns>Markdown atom.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.IsMarkdownUnorderedListItem(System.String)">
            <summary>
            Determine if a text item is part of a markdown unordered list.
            </summary>
            <param name="text">Text.</param>
            <returns>True if the text represents an unordered list.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.IsMarkdownOrderedListItem(System.String)">
            <summary>
            Determine if a text item is part of a markdown ordered list.
            </summary>
            <param name="text">Text.</param>
            <returns>True if the text represents an ordered list.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.IsMarkdownTableItem(System.String)">
            <summary>
            Determine if a text item is part of a markdown table.
            </summary>
            <param name="text">Text.</param>
            <returns>True if item is part of a table.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.MarkdownTextToDataTable(System.String)">
            <summary>
            Convert a markdown table to a DataTable.
            </summary>
            <param name="text">Markdown table.</param>
            <returns>DataTable.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.Atom.MarkdownTextToList(System.String)">
            <summary>
            Convert a markdown list to a list of strings.
            </summary>
            <param name="text">Text.</param>
            <returns>List of strings.</returns>
        </member>
        <member name="T:DocumentAtom.Core.Atoms.BoundingBox">
            <summary>
            Bounding box.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.UpperLeft">
            <summary>
            Upper left corner.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.LowerLeft">
            <summary>
            Lower left corner.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.UpperRight">
            <summary>
            Upper right corner.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.LowerRight">
            <summary>
            Lower right corner.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Atoms.BoundingBox.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.BoundingBox.#ctor">
            <summary>
            Bounding box.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.BoundingBox.FromRectangle(System.Drawing.Rectangle)">
            <summary>
            Create a bounding box from a rectangle.
            </summary>
            <param name="rect">Rectangle.</param>
            <returns>Bounding box.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.BoundingBox.Contains(System.Int32,System.Int32)">
            <summary>
            Check if a point is contained within the bounding box.
            </summary>
            <param name="pointX">Point X.</param>
            <param name="pointY">Point Y.</param>
            <returns>True if contained within the bounding box.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.BoundingBox.Intersects(DocumentAtom.Core.Atoms.BoundingBox)">
            <summary>
            Check if a bounding box intersects with this bounding box.
            </summary>
            <param name="other">Another bounding box.</param>
            <returns>True if the other bounding box intersects with this bounding box.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Atoms.BoundingBox.ToString">
            <summary>
            Produce a human-readable string of this object.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="T:DocumentAtom.Core.ChunkingSettings">
            <summary>
            Chunking settings, that is, breaking atoms into quarks.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ChunkingSettings.Enable">
            <summary>
            Enable or disable chunking, that is, breaking atoms into quarks.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ChunkingSettings.MaximumLength">
            <summary>
            Maximum quark content length.  Minimum is 256 and maximum is 16384.  Default is 512.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ChunkingSettings.ShiftSize">
            <summary>
            Shift size, used to determine overlap amongst neighboring quarks.
            When set to the same value as the maximum quark content length, no overlap will exist amongst neighboring quarks.
            When set to a smaller amount than the maximum quark content length, overlap will exist amongst neighboring quarks.
            This value must be equal to or less than the maximum quark content length.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ChunkingSettings.MaximumWords">
            <summary>
            The maximum number of words to retrieve.
            Default value is 256.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.ChunkingSettings.#ctor">
            <summary>
            Chunking settings, that is, breaking atoms into quarks.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Enums.AtomTypeEnum">
            <summary>
            Atom type.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.AtomTypeEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.AtomTypeEnum.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.AtomTypeEnum.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.AtomTypeEnum.List">
            <summary>
            List.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Enums.MarkdownFormattingEnum">
            <summary>
            Markdown formatting type.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Code">
            <summary>
            Code.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.UnorderedList">
            <summary>
            Unordered list.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.OrderedList">
            <summary>
            Ordered list.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Image">
            <summary>
            Image.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Url">
            <summary>
            URL.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownFormattingEnum.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Enums.MarkdownTableLineTypeEnum">
            <summary>
            Markdown table line type.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownTableLineTypeEnum.Separator">
            <summary>
            A separator line (contains hyphens and optional colons)
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.MarkdownTableLineTypeEnum.Content">
            <summary>
            A content line (header or data)
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Enums.SeverityEnum">
            <summary>
            Message severity.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Debug">
            <summary>
            Debug messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Info">
            <summary>
            Informational messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Warn">
            <summary>
            Warning messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Error">
            <summary>
            Error messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Alert">
            <summary>
            Alert messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Critical">
            <summary>
            Critical messages.
            </summary>
        </member>
        <member name="F:DocumentAtom.Core.Enums.SeverityEnum.Emergency">
            <summary>
            Emergency messages.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Helpers.DataTableHelper">
            <summary>
            DataTable helpers.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.DataTableHelper.GetLength(System.Data.DataTable)">
            <summary>
            Calculate DataTable length.
            This calculation adds the length of column names and row values.
            </summary>
            <param name="dt">DataTable.</param>
            <returns>Length.</returns>
        </member>
        <member name="T:DocumentAtom.Core.Helpers.FileHelper">
            <summary>
            File helpers.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.FileHelper.RecursiveDelete(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            Recursively delete a directory.
            </summary>
            <param name="baseDir">Base directory.</param>
            <param name="isRootDir">True to indicate the supplied directory is the root directory.</param>
        </member>
        <member name="T:DocumentAtom.Core.Helpers.HashHelper">
            <summary>
            Cryptographic hash helper.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.MD5Hash(System.Byte[])">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="data">Data.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.MD5Hash(System.IO.Stream)">
            <summary>
            Generate an MD5 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.MD5Hash(System.String)">
            <summary>
            Generate an MD5 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.MD5Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate an MD5 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.MD5Hash(System.Data.DataTable)">
            <summary>
            Generate an MD5 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA1Hash(System.Byte[])">
            <summary>
            Generate a SHA1 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA1Hash(System.IO.Stream)">
            <summary>
            Generate a SHA1 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>MD5 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA1Hash(System.String)">
            <summary>
            Generate a SHA1 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA1Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate a SHA1 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA1Hash(System.Data.DataTable)">
            <summary>
            Generate a SHA1 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>SHA1 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA256Hash(System.Byte[])">
            <summary>
            Generate a SHA256 hash of a byte array.
            </summary>
            <param name="data">Data.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA256Hash(System.IO.Stream)">
            <summary>
            Generate a SHA256 hash.
            </summary>
            <param name="stream">Stream.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA256Hash(System.String)">
            <summary>
            Generate a SHA256 hash of a string.
            </summary>
            <param name="str">String.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA256Hash(System.Collections.Generic.List{System.String})">
            <summary>
            Generate a SHA256 hash of a list of strings.
            </summary>
            <param name="strings">Strings.</param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.HashHelper.SHA256Hash(System.Data.DataTable)">
            <summary>
            Generate a SHA256 hash of a DataTable.
            This method concatenates column names (separated by a null character) and all cell values (separated by a null character).  Any null cells have their value replaced with the string NULL.
            </summary>
            <param name="dt">DataTable. </param>
            <returns>SHA256 hash.</returns>
        </member>
        <member name="T:DocumentAtom.Core.Helpers.OfficeFileHelper">
            <summary>
            Office file helper.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Helpers.OfficeFileHelper.GetRelationships(System.String)">
            <summary>
            Get relationships from relationships file.
            </summary>
            <param name="filename">Filename.</param>
            <returns>Relationships.</returns>
        </member>
        <member name="T:DocumentAtom.Core.StringHelper">
            <summary>
            String helpers.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.StringHelper.RemoveBinaryData(System.String)">
            <summary>
            Remove binary data from a string.
            </summary>
            <param name="input">String.</param>
            <returns>String.</returns>
        </member>
        <member name="M:DocumentAtom.Core.StringHelper.GetSubstringsFromString(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Extract substrings from a given string.
            </summary>
            <param name="str">String.</param>
            <param name="maximumLength">Maximum length.</param>
            <param name="shiftSize">Shift size.</param>
            <param name="maxWords">Maximum number of words to retrieve.</param>
            <returns>Substrings.</returns>
        </member>
        <member name="M:DocumentAtom.Core.StringHelper.GetFullWordsFromRange(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieve full words from within a range within a supplied string.
            </summary>
            <param name="str">String.</param>
            <param name="start">Start position.</param>
            <param name="end">End position.</param>
            <param name="maxWords">Maximum number of words to retrieve.</param>
            <returns>String.</returns>
        </member>
        <member name="T:DocumentAtom.Core.Image.ExtractionResult">
            <summary>
            Extraction result.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ExtractionResult.TextElements">
            <summary>
            Text elements.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ExtractionResult.Tables">
            <summary>
            Table elements.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ExtractionResult.Lists">
            <summary>
            List elements.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.ExtractionResult.#ctor">
            <summary>
            Extraction result.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.ExtractionResult.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Image.ExtractionResult.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Image.ListStructure">
            <summary>
            List structure.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ListStructure.Items">
            <summary>
            List items.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ListStructure.IsOrdered">
            <summary>
            Boolean indicating if the list is ordered.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.ListStructure.Bounds">
            <summary>
            Bounds for the list structure.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.ListStructure.#ctor">
            <summary>
            List structure.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.ListStructure.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Image.ListStructure.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Image.TableStructure">
            <summary>
            Table structure.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TableStructure.Cells">
            <summary>
            Table cells.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TableStructure.Bounds">
            <summary>
            Bounds for the table structure.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TableStructure.Rows">
            <summary>
            Number of rows.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TableStructure.Columns">
            <summary>
            Number of columns.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.TableStructure.#ctor">
            <summary>
            Table structure.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.TableStructure.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Image.TableStructure.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Image.TextElement">
            <summary>
            Text element.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TextElement.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Image.TextElement.Bounds">
            <summary>
            Bounds for the text.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.TextElement.#ctor">
            <summary>
            Text element.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Image.TextElement.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Image.TextElement.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Office.Relationship">
            <summary>
            Relationship.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Office.Relationship.Id">
            <summary>
            ID.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Office.Relationship.Type">
            <summary>
            Type.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Office.Relationship.Target">
            <summary>
            Target.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Office.Relationship.TargetMode">
            <summary>
            Target mode.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationship.#ctor">
            <summary>
            Relationship.
            </summary>
        </member>
        <member name="T:DocumentAtom.Core.Office.Relationships">
            <summary>
            Office document relationships.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.Office.Relationships.Items">
            <summary>
            Items.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationships.#ctor">
            <summary>
            Office document relationships.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationships.ToDictionary(DocumentAtom.Core.Office.Relationships)">
            <summary>
            Convert to a dictionary.
            </summary>
            <param name="relationships">Relationships.</param>
            <returns>Dictionary. </returns>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationships.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationships.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.Office.Relationships.ToDictionary">
            <summary>
            Convert to a dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DocumentAtom.Core.ProcessorBase">
            <summary>
            Processor base class.  Do not use directly.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorBase.Settings">
            <summary>
            Settings.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorBase.Logger">
            <summary>
            Logger method.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorBase.Header">
            <summary>
            Header to prepend to log messages.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorBase.Serializer">
            <summary>
            Serializer.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.#ctor">
            <summary>
            Processor base class.  Do not use directly.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.Dispose">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.Log(DocumentAtom.Core.Enums.SeverityEnum,System.String)">
            <summary>
            Emit a log message.
            </summary>
            <param name="sev">Severity.</param>
            <param name="msg">Message.</param>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.Extract(System.Byte[])">
            <summary>
            Extract atoms from a byte array.
            </summary>
            <param name="bytes">Byte array.</param>
            <returns>Atoms.</returns>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorBase.Extract(System.String)">
            <summary>
            Extract atoms from a file.
            </summary>
            <param name="filename">Filename.</param>
            <returns>Atoms.</returns>
        </member>
        <member name="T:DocumentAtom.Core.ProcessorSettingsBase">
            <summary>
            Processor settings base class.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.TrimText">
            <summary>
            True to trim any text output.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.RemoveBinaryFromText">
            <summary>
            True to remove binary data from input text data.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.ExtractAtomsFromImages">
            <summary>
            True to extract atoms from images using OCR.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.TempDirectoryInfo">
            <summary>
            Directory information for the temporary directory.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.TempDirectory">
            <summary>
            Temporary directory.  Default is ./temp/.
            This directory will be created automatically.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.StreamBufferSize">
            <summary>
            Buffer size to use when reading to or writing from streams.
            Default is 8192 bytes.
            Value must be greater than zero.
            </summary>
        </member>
        <member name="P:DocumentAtom.Core.ProcessorSettingsBase.Chunking">
            <summary>
            Chunking settings, that is, breaking atoms into smaller, more manageable quarks.
            </summary>
        </member>
        <member name="M:DocumentAtom.Core.ProcessorSettingsBase.#ctor">
            <summary>
            Processor settings base class.
            </summary>
        </member>
    </members>
</doc>
